---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app: {{ .Chart.Name }}
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        alertroute: {{ .Values.alertroute }}
      annotations:
        prometheus.io/scrape: "true"
        es_index: '{"backend":"k8s-{{ .Chart.Name }}"}'
      name: {{ .Chart.Name }}
    spec:
      containers:
        - name: backend
          image: {{ .Values.image }}
          imagePullPolicy: IfNotPresent
          command:
            #TODO: replace this command with whatever initial command
            #      your app will use. This can be a wrapper script 
            #      that sets ENV variables in addition to running something
            - /usr/local/bin/main
            - --flag1=val1
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9010
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9010
              scheme: HTTP
          ports:
            - containerPort: 9010
              protocol: TCP
              name: metrics
            - containerPort: 8080
              protocol: TCP
              name: app
          securityContext:
            runAsUser: 25643
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          env:
          - name: TEMPDIR
            value: /tmp
          - name: TMP
            value: /tmp
      volumes:
        - name: tempdir
          emptyDir: {}
          

